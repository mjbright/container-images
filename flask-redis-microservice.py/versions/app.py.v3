#!/usr/bin/env python3

# For none-container testing, install redis/flask modules:
#    python3 -m pip install redis flask

import os, time, json
import socket
#import random

import colour
colour.colour(True)

from redis import Redis
from flask import Flask, request, Response, stream_with_context, jsonify

#host = os.uname()[1]

## START_DELAY_SECS=20
## random.seed()
## START_DELAY_SECS=random.randint(1, START_DELAY_SECS)

app = Flask(__name__)
db = Redis( host = os.getenv( 'REDIS', 'redis'),
            port = int(os.getenv( 'REDIS_SERVICE_PORT', '6379' ) ) )

@app.route('/')
def hello():
    db.incr('count')

    HTML=True

    userAgent = request.headers['User-Agent'].lower()
    if userAgent.find('curl')  != -1: HTML=False
    if userAgent.find('links') != -1: HTML=False
    if userAgent.find('lynx')  != -1: HTML=False
    if userAgent.find('wget')  != -1: HTML=False

    host = socket.gethostname()

    if not HTML:
        return f'{__COLOUR__}[__IMAGE__]{colour.C_NORMAL} [{host}] Redis counter value={ db.get("count") }\n'
    
    return '''

<html>
  <head>
    <style>
          body {background-color: #ff0000;};
          h1   {color: blue;};
          p    {color: red;};
    </style>
  </head>
  <body>
    <b> [%s] Redis counter value=%s. </b>
  </body>
</html>

''' % (host, db.get('count'))

#    'rgb(0,255,0)', // version1
#    'rgb(0,0,255)',
#    'rgb(255,0,0)',
#    'rgb(255,255,0)',
#    'rgb(0,255,255)',
#    'rgb(127,127,255)'

if __name__ == "__main__":
    ## print("Sleeping %s secs ...\n" % START_DELAY_SECS)
    ## time.sleep(START_DELAY_SECS)

    print(f"Launching server on port {colour.C_RED}5000{colour.C_NORMAL}\n")
    app.run(host="0.0.0.0", debug=True)

